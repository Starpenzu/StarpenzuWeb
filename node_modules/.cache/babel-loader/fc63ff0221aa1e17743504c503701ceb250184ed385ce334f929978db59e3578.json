{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n    breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n    _options$disableAlign = options.disableAlign,\n    disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n    _options$factor = options.factor,\n    factor = _options$factor === void 0 ? 2 : _options$factor,\n    _options$variants = options.variants,\n    variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n  var theme = _objectSpread({}, themeInput);\n  theme.typography = _objectSpread({}, theme.typography);\n  var typography = theme.typography;\n\n  // Convert between CSS lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n    if (remFontSize <= 1) {\n      return;\n    }\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n    var transform = null;\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n    typography[variant] = _objectSpread(_objectSpread({}, style), responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","map":{"version":3,"names":["formatMuiErrorMessage","_formatMuiErrorMessage","isUnitless","convertLength","responsiveProperty","alignProperty","fontGrid","responsiveFontSizes","themeInput","options","arguments","length","undefined","_options$breakpoints","breakpoints","_options$disableAlign","disableAlign","_options$factor","factor","_options$variants","variants","theme","_objectSpread","typography","convert","htmlFontSize","breakpointValues","map","x","values","forEach","variant","style","remFontSize","parseFloat","fontSize","maxFontSize","minFontSize","lineHeight","Error","process","env","NODE_ENV","transform","value","size","grid","pixels","cssProperty","min","max","unit"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/material/styles/responsiveFontSizes.js"],"sourcesContent":["import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput, options = {}) {\n  const {\n    breakpoints = ['sm', 'md', 'lg'],\n    disableAlign = false,\n    factor = 2,\n    variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline']\n  } = options;\n  const theme = {\n    ...themeInput\n  };\n  theme.typography = {\n    ...theme.typography\n  };\n  const typography = theme.typography;\n\n  // Convert between CSS lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n  const convert = convertLength(typography.htmlFontSize);\n  const breakpointValues = breakpoints.map(x => theme.breakpoints.values[x]);\n  variants.forEach(variant => {\n    const style = typography[variant];\n    const remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n    if (remFontSize <= 1) {\n      return;\n    }\n    const maxFontSize = remFontSize;\n    const minFontSize = 1 + (maxFontSize - 1) / factor;\n    let {\n      lineHeight\n    } = style;\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported non-unitless line height with grid alignment.\nUse unitless line heights instead.` : _formatMuiErrorMessage(6));\n    }\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n    let transform = null;\n    if (!disableAlign) {\n      transform = value => alignProperty({\n        size: value,\n        grid: fontGrid({\n          pixels: 4,\n          lineHeight,\n          htmlFontSize: typography.htmlFontSize\n        })\n      });\n    }\n    typography[variant] = {\n      ...style,\n      ...responsiveProperty({\n        cssProperty: 'fontSize',\n        min: minFontSize,\n        max: maxFontSize,\n        unit: 'rem',\n        breakpoints: breakpointValues,\n        transform\n      })\n    };\n  });\n  return theme;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}