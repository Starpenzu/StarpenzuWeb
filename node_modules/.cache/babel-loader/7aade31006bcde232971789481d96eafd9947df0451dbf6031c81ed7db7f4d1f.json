{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\WebstormProjects\\\\StarpenzuWeb\\\\src\\\\Components\\\\SignUp\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Footer from '../Footer/Footer';\nimport NavBar from '../Navbar/NavBar';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { TextField, MenuItem, useMediaQuery } from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './SignUp.css';\nimport SignInButton from './SignInbutton';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport theme from '../SignUp/theme';\n\n// const SelectGender = [\n//     {\n//         value: 'Male',\n//         label: 'Male',\n//     },\n//     {\n//         value: 'Female',\n//         label: 'Female',\n//     },\n//     {\n//         value: 'Others',\n//         label: 'Others',\n//     }\n//     ]\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  //     const [showPassword, setShowPassword] = React.useState(false);\n  //     const [formErrors, setFormErrors] = React.useState({});\n  //\n  //     const handleClickShowPassword = () => setShowPassword((show) => !show);\n  //\n  //     const handleMouseDownPassword = (event) => {\n  //         event.preventDefault();\n  //     };\n\n  // const classes = useStyles();\n\n  const [formData, setFormData] = React.useState(() => JSON.parse(localStorage.getItem(\"RegisterUser\")) || {\n    firstName: \"\",\n    surname: \"\",\n    DOB: \"\",\n    gender: \"\",\n    whatsappNum: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  // const [error, setError] = React.useState(false)\n  // const { firstName, surname, DOB, gender, whatsappNum, email, password, confirmPassword } = formData;\n  // const Name = firstName + \" \" + surname;\n\n  React.useEffect(function () {\n    return localStorage.setItem(\"RegisterUser\", JSON.stringify(formData));\n  }, [formData]);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    // setting your new state\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    // setFormErrors((prevFormErrors) => ({\n    //     ...prevFormErrors,\n    //     [name]: value ? '' : 'This field is required',\n    // }));\n    //console.log(event.target.name + ':' + event.target.value)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    // setError(false);\n    //\n    // const emptyFields = Object.keys(formData).filter((key) => !formData[key]);\n    //\n    // if (emptyFields.length > 0) {\n    //     // Set the error messages for empty fields\n    //     const fieldErrors = emptyFields.reduce((errors, field) => {\n    //         return { ...errors, [field]: 'This field is required' };\n    //     }, {});\n    //\n    //     setFormErrors(fieldErrors);\n    //     return; // Stop further processing\n    // }\n    //\n    // // All fields are filled, continue with form submission logic\n    //\n    // // Reset formErrors if needed\n    // setFormErrors({});\n    //\n    // const { firstName, surname, DOB, gender, whatsappNum, email, password, confirmPassword } = formData;\n    //\n    // if (!firstName || !surname || !DOB || !gender || !whatsappNum || !email || !password || !confirmPassword) {\n    //     setError(true);\n    //     alert('Please fill in all the fields');\n    //     return;\n    // }\n    //\n    // if (password !== confirmPassword) {\n    //     setError(true);\n    //     alert('Passwords do not match');\n    //     return;\n    // }\n    //\n    // const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    // if (!passwordRegex.test(password)) {\n    //     setError(true);\n    //     alert('Password must contain at least one character, one number, one uppercase letter, and have a minimum length of 8 characters');\n    //     return;\n    // }\n    //\n    // // Proceed with form submission or further processing\n    // alert('Registration Form submitted successfully!' + \" \" + \"Welcome\" + \" \" + Name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signupHeader\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"backarrow\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://res.cloudinary.com/do5wu6ikf/image/upload/v1684452441/starpenzu/back_qpybto.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupTitle\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        className: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SignUp, \"SAL5yht7VcaHa9ZWvnhertJy7cs=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","Footer","NavBar","Link","useLocation","TextField","MenuItem","useMediaQuery","FormControl","createTheme","ThemeProvider","SignInButton","IconButton","OutlinedInput","InputLabel","InputAdornment","Visibility","VisibilityOff","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","formData","setFormData","useState","JSON","parse","localStorage","getItem","firstName","surname","DOB","gender","whatsappNum","email","password","confirmPassword","useEffect","setItem","stringify","handleChange","event","name","value","target","prevState","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","src","alt","action","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/src/Components/SignUp/SignUp.js"],"sourcesContent":["import React from 'react';\r\nimport Footer from '../Footer/Footer';\r\nimport NavBar from '../Navbar/NavBar';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport { TextField , MenuItem, useMediaQuery  } from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport './SignUp.css'\r\nimport SignInButton from './SignInbutton'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport theme from '../SignUp/theme';\r\n\r\n\r\n\r\n\r\n// const SelectGender = [\r\n//     {\r\n//         value: 'Male',\r\n//         label: 'Male',\r\n//     },\r\n//     {\r\n//         value: 'Female',\r\n//         label: 'Female',\r\n//     },\r\n//     {\r\n//         value: 'Others',\r\n//         label: 'Others',\r\n//     }\r\n//     ]\r\n//\r\nexport default function SignUp() {\r\n//     const [showPassword, setShowPassword] = React.useState(false);\r\n//     const [formErrors, setFormErrors] = React.useState({});\r\n//\r\n//     const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n//\r\n//     const handleMouseDownPassword = (event) => {\r\n//         event.preventDefault();\r\n//     };\r\n\r\n\r\n    // const classes = useStyles();\r\n\r\n    const [formData, setFormData] = React.useState(() => JSON.parse(localStorage.getItem(\"RegisterUser\"))\r\n        ||\r\n        {\r\n            firstName: \"\",\r\n            surname: \"\",\r\n            DOB: \"\",\r\n            gender: \"\",\r\n            whatsappNum: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n        }\r\n    );\r\n    // const [error, setError] = React.useState(false)\r\n    // const { firstName, surname, DOB, gender, whatsappNum, email, password, confirmPassword } = formData;\r\n    // const Name = firstName + \" \" + surname;\r\n\r\n    React.useEffect(\r\n        function () {\r\n            return (\r\n                localStorage.setItem(\"RegisterUser\", JSON.stringify(formData))\r\n            )\r\n        },\r\n        [formData]\r\n    )\r\n\r\n\r\n    function handleChange(event) {\r\n\r\n        const {name, value} = event.target;\r\n        // setting your new state\r\n        setFormData(prevState => (\r\n            {\r\n                ...prevState,\r\n                [name]: value\r\n            }\r\n        ));\r\n        // setFormErrors((prevFormErrors) => ({\r\n        //     ...prevFormErrors,\r\n        //     [name]: value ? '' : 'This field is required',\r\n        // }));\r\n        //console.log(event.target.name + ':' + event.target.value)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // setError(false);\r\n        //\r\n        // const emptyFields = Object.keys(formData).filter((key) => !formData[key]);\r\n        //\r\n        // if (emptyFields.length > 0) {\r\n        //     // Set the error messages for empty fields\r\n        //     const fieldErrors = emptyFields.reduce((errors, field) => {\r\n        //         return { ...errors, [field]: 'This field is required' };\r\n        //     }, {});\r\n        //\r\n        //     setFormErrors(fieldErrors);\r\n        //     return; // Stop further processing\r\n        // }\r\n        //\r\n        // // All fields are filled, continue with form submission logic\r\n        //\r\n        // // Reset formErrors if needed\r\n        // setFormErrors({});\r\n        //\r\n        // const { firstName, surname, DOB, gender, whatsappNum, email, password, confirmPassword } = formData;\r\n        //\r\n        // if (!firstName || !surname || !DOB || !gender || !whatsappNum || !email || !password || !confirmPassword) {\r\n        //     setError(true);\r\n        //     alert('Please fill in all the fields');\r\n        //     return;\r\n        // }\r\n        //\r\n        // if (password !== confirmPassword) {\r\n        //     setError(true);\r\n        //     alert('Passwords do not match');\r\n        //     return;\r\n        // }\r\n        //\r\n        // const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n        // if (!passwordRegex.test(password)) {\r\n        //     setError(true);\r\n        //     alert('Password must contain at least one character, one number, one uppercase letter, and have a minimum length of 8 characters');\r\n        //     return;\r\n        // }\r\n        //\r\n        // // Proceed with form submission or further processing\r\n        // alert('Registration Form submitted successfully!' + \" \" + \"Welcome\" + \" \" + Name);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar/>\r\n            <div className=\"signup\">\r\n\r\n                <div className=\"signupHeader\">\r\n                    <Link to='/'>\r\n                        <div className=\"backarrow\">\r\n                            <img src=\"https://res.cloudinary.com/do5wu6ikf/image/upload/v1684452441/starpenzu/back_qpybto.svg\" alt=\"\"/>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <div className=\"signupTitle\">\r\n                        Register\r\n                    </div>\r\n                </div>\r\n                {/*<ThemeProvider theme={theme}>*/}\r\n                <form action=\"\" onSubmit={handleSubmit} className=\"register\">\r\n\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <TextField*/}\r\n                    {/*        sx={{*/}\r\n                    {/*            fontFamily: 'Clash display',*/}\r\n                    {/*            fontSize:18*/}\r\n                    {/*        }}*/}\r\n                    {/*        error={!!formErrors.firstName}*/}\r\n                    {/*        className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-1\"*/}\r\n                    {/*        label=\"First Name\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        type='text'*/}\r\n                    {/*        required*/}\r\n                    {/*        name={\"firstName\"}*/}\r\n                    {/*        value={formData.firstName}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <TextField*/}\r\n                    {/*        sx={{*/}\r\n                    {/*            fontFamily: 'Clash display',*/}\r\n                    {/*            fontSize:18*/}\r\n                    {/*        }}*/}\r\n                    {/*        error={!!formErrors.surname}*/}\r\n                    {/*        className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-2\"*/}\r\n                    {/*        label=\"Surname\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        type='text'*/}\r\n                    {/*        required*/}\r\n                    {/*        name={\"surname\"}*/}\r\n                    {/*        value={formData.surname}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*      <TextField*/}\r\n                    {/*          sx={{*/}\r\n                    {/*              fontFamily: 'Clash display',*/}\r\n                    {/*              fontSize:18*/}\r\n                    {/*          }}*/}\r\n                    {/*          error={!!formErrors.DOB}*/}\r\n                    {/*           className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-3\"*/}\r\n                    {/*        label=\"Date of Birth\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        InputLabelProps={{*/}\r\n                    {/*            shrink: true,*/}\r\n                    {/*        }}*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        type='date'*/}\r\n                    {/*        name={\"DOB\"}*/}\r\n                    {/*        required*/}\r\n                    {/*        value={formData.DOB}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <TextField*/}\r\n                    {/*        sx={{*/}\r\n                    {/*            fontFamily: 'Clash display',*/}\r\n                    {/*            fontSize:18,*/}\r\n                    {/*            border:'1px'*/}\r\n                    {/*        }}*/}\r\n\r\n                    {/*        error={!!formErrors.gender}*/}\r\n                    {/*         className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-4\"*/}\r\n                    {/*        label=\"Gender\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        select*/}\r\n                    {/*        type='select'*/}\r\n                    {/*        name={\"gender\"}*/}\r\n                    {/*        required*/}\r\n                    {/*        value={formData.gender}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*        defaultValue=\"\">*/}\r\n\r\n                    {/*              {SelectGender.map((option) => (*/}\r\n                    {/*                  <MenuItem key={option.value} value={option.value}>*/}\r\n                    {/*                      {option.label}*/}\r\n                    {/*                  </MenuItem>*/}\r\n                    {/*              ))}*/}\r\n\r\n                    {/*    </TextField>*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <TextField*/}\r\n                    {/*        sx={{*/}\r\n                    {/*            fontFamily: 'Clash display',*/}\r\n                    {/*            fontSize:18*/}\r\n                    {/*        }}*/}\r\n                    {/*        error={!!formErrors.whatsappNum}*/}\r\n                    {/*         className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-4\"*/}\r\n                    {/*        label=\"Whatsapp Number\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        type='text'*/}\r\n                    {/*        required*/}\r\n                    {/*        name={\"whatsappNum\"}*/}\r\n                    {/*        value={formData.whatsappNum}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <TextField*/}\r\n                    {/*        sx={{*/}\r\n                    {/*            fontFamily: 'Clash display',*/}\r\n                    {/*            fontSize:18*/}\r\n                    {/*        }}*/}\r\n                    {/*        error={!!formErrors.email}*/}\r\n                    {/*         className='outlined'*/}\r\n                    {/*        id=\"outlined-basic-5\"*/}\r\n                    {/*        label=\"Email\"*/}\r\n                    {/*        color='secondary'*/}\r\n                    {/*        variant=\"outlined\"*/}\r\n                    {/*        margin=\"dense\"*/}\r\n                    {/*        type=\"email\"*/}\r\n                    {/*        required*/}\r\n                    {/*        name={\"email\"}*/}\r\n                    {/*        value={formData.email}*/}\r\n                    {/*        onChange={handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/* <div className=\"cluse\">*/}\r\n                    {/*        /!*<TextField*!/*/}\r\n                    {/*        /!*     error={error}*!/*/}\r\n                    {/*        /!*     className='outlined'*!/*/}\r\n                    {/*        /!*    id=\"outlined-basic-6\"*!/*/}\r\n                    {/*        /!*    label=\"Password\"*!/*/}\r\n                    {/*        /!*    color='secondary'*!/*/}\r\n                    {/*        /!*    variant=\"outlined\"*!/*/}\r\n                    {/*        /!*    margin=\"dense\"*!/*/}\r\n                    {/*        /!*    type='password'*!/*/}\r\n                    {/*        /!*    required*!/*/}\r\n                    {/*        /!*    name={\"password\"}*!/*/}\r\n                    {/*        /!*    value={formData.password}*!/*/}\r\n                    {/*        /!*    onChange={handleChange}*!/*/}\r\n                    {/*/>*/}\r\n\r\n                    {/*     <FormControl sx={{ marginTop: 1, fontSize:10}} variant=\"outlined\">*/}\r\n                    {/*         <InputLabel htmlFor=\"outlined-adornment-password\" error={!!formErrors.password} color='secondary' sx={{fontSize:15}}>Password</InputLabel>*/}\r\n                    {/*         <OutlinedInput*/}\r\n                    {/*             sx={{*/}\r\n                    {/*                 fontFamily: 'Clash display',*/}\r\n                    {/*                 fontSize:18*/}\r\n                    {/*             }}*/}\r\n                    {/*              className='outlined'*/}\r\n                    {/*             error={!!formErrors.password}*/}\r\n                    {/*             onChange={handleChange}*/}\r\n                    {/*             value={formData.password}*/}\r\n                    {/*             name={\"password\"}*/}\r\n                    {/*             color='secondary'*/}\r\n                    {/*             id=\"outlined-adornment-password\"*/}\r\n                    {/*             required*/}\r\n                    {/*             type={showPassword ? 'text' : 'password'}*/}\r\n                    {/*             endAdornment={*/}\r\n                    {/*                 <InputAdornment position=\"end\">*/}\r\n                    {/*                     <IconButton*/}\r\n                    {/*                         aria-label=\"toggle password visibility\"*/}\r\n                    {/*                         onClick={handleClickShowPassword}*/}\r\n                    {/*                         onMouseDown={handleMouseDownPassword}*/}\r\n                    {/*                         edge=\"end\"*/}\r\n                    {/*                     >*/}\r\n                    {/*                         {showPassword ? <VisibilityOff /> : <Visibility />}*/}\r\n                    {/*                     </IconButton>*/}\r\n                    {/*                 </InputAdornment>*/}\r\n                    {/*             }*/}\r\n                    {/*             label=\"Password\"*/}\r\n                    {/*         />*/}\r\n\r\n                    {/*     </FormControl>*/}\r\n\r\n                    {/* </div>*/}\r\n\r\n                    {/*<div className=\"cluse\">*/}\r\n                    {/*    <FormControl sx={{ marginTop: 1.5, fontSize:10}} variant=\"outlined\">*/}\r\n                    {/*        <InputLabel htmlFor=\"outlined-adornment-password-1\" error={!!formErrors.confirmPassword} color='secondary' sx={{fontSize:15}}>Confirm Password</InputLabel>*/}\r\n                    {/*        <OutlinedInput*/}\r\n                    {/*             sx={{*/}\r\n                    {/*                 fontFamily: 'Clash display',*/}\r\n                    {/*                 fontSize:18*/}\r\n                    {/*             }}*/}\r\n                    {/*            className='outlined'*/}\r\n                    {/*            error={!!formErrors.confirmPassword}*/}\r\n                    {/*            onChange={handleChange}*/}\r\n                    {/*            value={formData.confirmPassword}*/}\r\n                    {/*            name={\"confirmPassword\"}*/}\r\n                    {/*            color='secondary'*/}\r\n                    {/*            id=\"outlined-adornment-password-1\"*/}\r\n                    {/*            required*/}\r\n                    {/*            type={showPassword ? 'text' : 'password'}*/}\r\n                    {/*            endAdornment={*/}\r\n                    {/*                <InputAdornment position=\"end\">*/}\r\n                    {/*                    <IconButton*/}\r\n                    {/*                        aria-label=\"toggle password visibility\"*/}\r\n                    {/*                        onClick={handleClickShowPassword}*/}\r\n                    {/*                        onMouseDown={handleMouseDownPassword}*/}\r\n                    {/*                        edge=\"end\"*/}\r\n                    {/*                    >*/}\r\n                    {/*                        {showPassword ? <VisibilityOff /> : <Visibility />}*/}\r\n                    {/*                    </IconButton>*/}\r\n                    {/*                </InputAdornment>*/}\r\n                    {/*            }*/}\r\n                    {/*            label=\"Password\"*/}\r\n                    {/*        />*/}\r\n\r\n                    {/*    </FormControl>*/}\r\n\r\n                    {/*/!*    <p className={'pword'} > {error ? '*Password must contain at least one character, one number, one uppercase letter, and' +*!/*/}\r\n                    {/*/!*        ' have a' +  ' minimum length of' +  ' 8' + ' characters' : \"\"}*!/*/}\r\n                    {/*/!*        <br/>*!/*/}\r\n                    {/*/!*        {formData.password !== formData.confirmPassword ? '*Passwords do not match' : ''}*!/*/}\r\n                    {/*/!*    </p>*!/*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*{error ? <div className=\"new\">*/}\r\n                    {/*    <p className={'pword'}> {error ? '*Password must contain at least one character, one number, one uppercase letter, and' +*/}\r\n                    {/*        ' have a' + ' minimum length of' + ' 8' + ' characters.' : \"\"}*/}\r\n                    {/*        <br/>*/}\r\n                    {/*        <br/>*/}\r\n                    {/*        {formData.password !== formData.confirmPassword ? '*Passwords do not match.' : ''}*/}\r\n                    {/*    </p>*/}\r\n                    {/*</div>: ''}*/}\r\n                    {/*<SignInButton*/}\r\n                    {/*    className='registerBtn'*/}\r\n                    {/*    buttonName='Register'*/}\r\n                    {/*/>*/}\r\n\r\n                    {/*<div className=\"already\">Already have an account? <Link className='link-d' to='/Login'><span className=\"loginn\">Sign In</span></Link></div>*/}\r\n\r\n                </form>\r\n                {/*</ThemeProvider>*/}\r\n\r\n\r\n            </div>\r\n\r\n            <Footer/>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}