{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nexport default function createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n    _ref$fontFamily = _ref.fontFamily,\n    fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n    _ref$fontSize = _ref.fontSize,\n    fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n    _ref$fontWeightLight = _ref.fontWeightLight,\n    fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n    _ref$fontWeightRegula = _ref.fontWeightRegular,\n    fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n    _ref$fontWeightMedium = _ref.fontWeightMedium,\n    fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n    _ref$fontWeightBold = _ref.fontWeightBold,\n    fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n    _ref$htmlFontSize = _ref.htmlFontSize,\n    htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n    allVariants = _ref.allVariants,\n    pxToRem2 = _ref.pxToRem,\n    other = _objectWithoutProperties(_ref, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  var coef = fontSize / 14;\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return _objectSpread(_objectSpread(_objectSpread({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}), casing), allVariants);\n  };\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge(_objectSpread({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}","map":{"version":3,"names":["deepmerge","round","value","Math","caseAllCaps","textTransform","defaultFontFamily","createTypography","palette","typography","_ref","_ref$fontFamily","fontFamily","_ref$fontSize","fontSize","_ref$fontWeightLight","fontWeightLight","_ref$fontWeightRegula","fontWeightRegular","_ref$fontWeightMedium","fontWeightMedium","_ref$fontWeightBold","fontWeightBold","_ref$htmlFontSize","htmlFontSize","allVariants","pxToRem2","pxToRem","other","_objectWithoutProperties","_excluded","process","env","NODE_ENV","console","error","coef","size","concat","buildVariant","fontWeight","lineHeight","letterSpacing","casing","_objectSpread","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","inherit","clone"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/material/styles/createTypography.js"],"sourcesContent":["import { deepmerge } from '@mui/utils';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nexport default function createTypography(palette, typography) {\n  const {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2,\n    ...other\n  } = typeof typography === 'function' ? typography(palette) : typography;\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => ({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight,\n    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\n    // across font-families can cause issues with the kerning.\n    ...(fontFamily === defaultFontFamily ? {\n      letterSpacing: `${round(letterSpacing / size)}em`\n    } : {}),\n    ...casing,\n    ...allVariants\n  });\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\n    inherit: {\n      fontFamily: 'inherit',\n      fontWeight: 'inherit',\n      fontSize: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  };\n  return deepmerge({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold,\n    ...variants\n  }, other, {\n    clone: false // No need to clone deep\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}