{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is the same or less than the given breakpoint.\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n      withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n      _options$noSSR = options.noSSR,\n      noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n      initialWidthOption = options.initialWidth;\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n      var _getThemeProps = getThemeProps({\n          theme: theme,\n          name: 'MuiWithWidth',\n          props: props\n        }),\n        initialWidth = _getThemeProps.initialWidth,\n        width = _getThemeProps.width,\n        other = _objectWithoutProperties(_getThemeProps, _excluded);\n      var _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mountedState = _React$useState2[0],\n        setMountedState = _React$useState2[1];\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n      var more = _objectSpread(_objectSpread({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}), other);\n\n      // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n      if (more.width === undefined) {\n        return null;\n      }\n      return /*#__PURE__*/_jsx(Component, _objectSpread({}, more));\n    }\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\n       * As `window.innerWidth` is unavailable on the server,\n       * we default to rendering an empty component during the first mount.\n       * You might want to use a heuristic to approximate\n       * the screen width of the client browser screen width.\n       *\n       * For instance, you could be using the user-agent or the client-hints.\n       * https://caniuse.com/#search=client%20hint\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n      /**\n       * @ignore\n       */\n      theme: PropTypes.object,\n      /**\n       * Bypass the width calculation logic.\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n    return WithWidth;\n  };\n};\nexport default withWidth;","map":{"version":3,"names":["React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","arguments","length","undefined","indexOf","isWidthDown","withWidth","options","Component","_options$withTheme","withTheme","withThemeOption","_options$noSSR","noSSR","initialWidthOption","initialWidth","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","mountedState","setMountedState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","_objectSpread","process","env","NODE_ENV","propTypes","oneOf","object","displayName","concat"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/material/Hidden/withWidth.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@mui/utils';\nimport { getThemeProps } from '@mui/system';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is the same or less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const {\n      initialWidth,\n      width,\n      ...other\n    } = getThemeProps({\n      theme,\n      name: 'MuiWithWidth',\n      props\n    });\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n    const more = {\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption,\n      ...(withThemeOption ? {\n        theme\n      } : {}),\n      ...other\n    };\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, {\n      ...more\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}