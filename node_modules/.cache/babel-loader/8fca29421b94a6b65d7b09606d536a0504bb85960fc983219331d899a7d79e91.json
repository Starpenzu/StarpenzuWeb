{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, function (mode) {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  var value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  var _options$defaultMode = options.defaultMode,\n    defaultMode = _options$defaultMode === void 0 ? 'light' : _options$defaultMode,\n    defaultLightColorScheme = options.defaultLightColorScheme,\n    defaultDarkColorScheme = options.defaultDarkColorScheme,\n    _options$supportedCol = options.supportedColorSchemes,\n    supportedColorSchemes = _options$supportedCol === void 0 ? [] : _options$supportedCol,\n    _options$modeStorageK = options.modeStorageKey,\n    modeStorageKey = _options$modeStorageK === void 0 ? DEFAULT_MODE_STORAGE_KEY : _options$modeStorageK,\n    _options$colorSchemeS = options.colorSchemeStorageKey,\n    colorSchemeStorageKey = _options$colorSchemeS === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _options$colorSchemeS,\n    _options$storageWindo = options.storageWindow,\n    storageWindow = _options$storageWindo === void 0 ? typeof window === 'undefined' ? undefined : window : _options$storageWindo;\n  var joinedColorSchemes = supportedColorSchemes.join(',');\n  var _React$useState = React.useState(function () {\n      var initialMode = initializeValue(modeStorageKey, defaultMode);\n      var lightColorScheme = initializeValue(\"\".concat(colorSchemeStorageKey, \"-light\"), defaultLightColorScheme);\n      var darkColorScheme = initializeValue(\"\".concat(colorSchemeStorageKey, \"-dark\"), defaultDarkColorScheme);\n      return {\n        mode: initialMode,\n        systemMode: getSystemMode(initialMode),\n        lightColorScheme: lightColorScheme,\n        darkColorScheme: darkColorScheme\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  var colorScheme = getColorScheme(state);\n  var setMode = React.useCallback(function (mode) {\n    setState(function (currentState) {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      var newMode = !mode ? defaultMode : mode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return _objectSpread(_objectSpread({}, currentState), {}, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  var setColorScheme = React.useCallback(function (value) {\n    if (!value) {\n      setState(function (currentState) {\n        try {\n          localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), defaultLightColorScheme);\n          localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return _objectSpread(_objectSpread({}, currentState), {}, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n      } else {\n        setState(function (currentState) {\n          var newState = _objectSpread({}, currentState);\n          processState(currentState, function (mode) {\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-\").concat(mode), value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(function (currentState) {\n        var newState = _objectSpread({}, currentState);\n        var newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        var newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(\"`\".concat(newLightColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(\"`\".concat(newDarkColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  var handleMediaQuery = React.useCallback(function (e) {\n    if (state.mode === 'system') {\n      setState(function (currentState) {\n        return _objectSpread(_objectSpread({}, currentState), {}, {\n          systemMode: e != null && e.matches ? 'dark' : 'light'\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  var mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(function () {\n    var handler = function handler() {\n      return mediaListener.current.apply(mediaListener, arguments);\n    };\n\n    // Always listen to System preference\n    var media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return function () {\n      return media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(function () {\n    var handleStorage = function handleStorage(event) {\n      var value = event.newValue;\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return function () {\n        return storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    colorScheme: colorScheme,\n    setMode: setMode,\n    setColorScheme: setColorScheme\n  });\n}","map":{"version":3,"names":["React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","initializeValue","key","defaultValue","value","localStorage","getItem","setItem","e","useCurrentColorScheme","options","_options$defaultMode","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","_options$supportedCol","supportedColorSchemes","_options$modeStorageK","modeStorageKey","_options$colorSchemeS","colorSchemeStorageKey","_options$storageWindo","storageWindow","joinedColorSchemes","join","_React$useState","useState","initialMode","concat","_React$useState2","_slicedToArray","setState","colorScheme","setMode","useCallback","currentState","newMode","_objectSpread","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","apply","arguments","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["import * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = !mode ? defaultMode : mode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => ({\n        ...currentState,\n        systemMode: e != null && e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return {\n    ...state,\n    colorScheme,\n    setMode,\n    setColorScheme\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}