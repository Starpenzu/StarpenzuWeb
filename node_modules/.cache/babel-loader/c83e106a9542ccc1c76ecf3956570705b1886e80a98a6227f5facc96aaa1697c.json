{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"autoHideDuration\", \"children\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport useSnackbar from '../useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses() {\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base/react-snackbar/)\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\n *\n * API:\n *\n * - [Snackbar API](https://mui.com/base/react-snackbar/components-api/#snackbar)\n */\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, forwardedRef) {\n  var _props$autoHideDurati = props.autoHideDuration,\n    autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n    children = props.children,\n    _props$disableWindowB = props.disableWindowBlurListener,\n    disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n    _props$exited = props.exited,\n    exited = _props$exited === void 0 ? true : _props$exited,\n    onBlur = props.onBlur,\n    onClose = props.onClose,\n    onFocus = props.onFocus,\n    onMouseEnter = props.onMouseEnter,\n    onMouseLeave = props.onMouseLeave,\n    open = props.open,\n    resumeHideDuration = props.resumeHideDuration,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutProperties(props, _excluded);\n  var classes = useUtilityClasses();\n  var _useSnackbar = useSnackbar(_objectSpread(_objectSpread({}, props), {}, {\n      autoHideDuration: autoHideDuration,\n      disableWindowBlurListener: disableWindowBlurListener,\n      onClose: onClose,\n      open: open,\n      resumeHideDuration: resumeHideDuration\n    })),\n    getRootProps = _useSnackbar.getRootProps,\n    onClickAway = _useSnackbar.onClickAway;\n  var ownerState = props;\n  var Root = slots.root || 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway: onClickAway\n    },\n    ownerState: ownerState\n  });\n\n  // ClickAwayListener doesn't support ownerState\n  delete clickAwayListenerProps.ownerState;\n\n  // So that we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _objectSpread(_objectSpread({}, clickAwayListenerProps), {}, {\n    children: /*#__PURE__*/_jsx(Root, _objectSpread(_objectSpread({}, rootProps), {}, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default Snackbar;","map":{"version":3,"names":["React","PropTypes","ClickAwayListener","composeClasses","getSnackbarUtilityClass","useSnackbar","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","slots","root","Snackbar","forwardRef","props","forwardedRef","_props$autoHideDurati","autoHideDuration","children","_props$disableWindowB","disableWindowBlurListener","_props$exited","exited","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$slotProps","slotProps","_props$slots","other","_objectWithoutProperties","_excluded","classes","_useSnackbar","_objectSpread","getRootProps","onClickAway","ownerState","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","className","clickAwayListenerProps","clickAwayListener","process","env","NODE_ENV","propTypes","number","node","bool","func","shape","oneOfType","element","isRequired","disableReactTree","mouseEvent","oneOf","touchEvent","object"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/base/Snackbar/Snackbar.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport useSnackbar from '../useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base/react-snackbar/)\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\n *\n * API:\n *\n * - [Snackbar API](https://mui.com/base/react-snackbar/components-api/#snackbar)\n */\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, forwardedRef) {\n  const {\n    autoHideDuration = null,\n    children,\n    disableWindowBlurListener = false,\n    exited = true,\n    onBlur,\n    onClose,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const classes = useUtilityClasses();\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar({\n    ...props,\n    autoHideDuration,\n    disableWindowBlurListener,\n    onClose,\n    open,\n    resumeHideDuration\n  });\n  const ownerState = props;\n  const Root = slots.root || 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway\n    },\n    ownerState\n  });\n\n  // ClickAwayListener doesn't support ownerState\n  delete clickAwayListenerProps.ownerState;\n\n  // So that we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, {\n    ...clickAwayListenerProps,\n    children: /*#__PURE__*/_jsx(Root, {\n      ...rootProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default Snackbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}