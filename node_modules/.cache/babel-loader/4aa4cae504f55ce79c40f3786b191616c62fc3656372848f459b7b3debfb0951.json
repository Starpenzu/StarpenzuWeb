{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport useTabPanel from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var hidden = ownerState.hidden;\n  var slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanel API](https://mui.com/base/react-tabs/components-api/#tab-panel)\n */\nvar TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\n  var _slots$root;\n  var children = props.children,\n    value = props.value,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutProperties(props, _excluded);\n  var _useTabPanel = useTabPanel(props),\n    hidden = _useTabPanel.hidden,\n    getRootProps = _useTabPanel.getRootProps;\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    hidden: hidden\n  });\n  var classes = useUtilityClasses(ownerState);\n  var TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  var tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: forwardedRef\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _objectSpread(_objectSpread({}, tabPanelRootProps), {}, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   * If not provided, it will fall back to the index of the panel.\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TabPanel;","map":{"version":3,"names":["React","PropTypes","useSlotProps","composeClasses","getTabPanelUtilityClass","useTabPanel","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","hidden","slots","root","TabPanel","forwardRef","props","forwardedRef","_slots$root","children","value","_props$slotProps","slotProps","_props$slots","other","_objectWithoutProperties","_excluded","_useTabPanel","getRootProps","_objectSpread","classes","TabPanelRoot","tabPanelRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","ref","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","number","string"],"sources":["C:/Users/Dell/WebstormProjects/StarpenzuWeb/node_modules/@mui/base/TabPanel/TabPanel.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport useTabPanel from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base/react-tabs/)\n *\n * API:\n *\n * - [TabPanel API](https://mui.com/base/react-tabs/components-api/#tab-panel)\n */\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\n  var _slots$root;\n  const {\n    children,\n    value,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const {\n    hidden,\n    getRootProps\n  } = useTabPanel(props);\n  const ownerState = {\n    ...props,\n    hidden\n  };\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, {\n    ...tabPanelRootProps,\n    children: !hidden && children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   * If not provided, it will fall back to the index of the panel.\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TabPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}